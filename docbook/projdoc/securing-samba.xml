<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="securing-samba">
<chapterinfo>
	&author.tridge;
	&author.jht;
	<pubdate>May 26, 2003</pubdate>
        <author>&person.sgw;<contrib>Deutsche Übersetzung</contrib></author>
</chapterinfo>

<title>Samba absichern</title>

<sect1>
<title>Einführung</title>
<para>
Diese Anmerkung wurde den Release-Notes zu Samba 2.2.8 hinzugefügt, da sie eine
wichtige Sicherheits-Korrektur enthält. Die hier enthaltene Information gilt generell
für Samba-Installationen.
</para>

<blockquote>
<para>
Ein neuer Lehrling meldete sich beim Chef-Ingenieur eines Kesselhauses zur Arbeit. Er sagte:
<quote>Hier bin ich, wenn Sie mir den Boiler zeigen, werde ich daran zu arbeiten beginnen.</quote>
Der Ingenieur antwortete:<quote>Du lehnst daran!</quote>
</para>
</blockquote>

<para>
Sicherheits-Bedenken sind genau so. Sie müssen ein wenig über das Thema wissen, um anzuerkennen, wie
offensichtlich das meiste davon ist. Die Herausforderung für die meisten von uns ist, den ersten
Brocken des Wissens zu entdecken, mit dem wir die Geheimnisse der Meister für uns eröffnen könnten.
</para>

</sect1>

<sect1>
<title>Eigenschaften und Vorzüge</title>

<para>
Es gibt drei Ebenen, auf denen Sicherheits-Prinzipien beachtet werden müssen, um eine Installation
zumindest einigermassen sicher zu gestalten. Diese sind die umgebende Firewall, die Konfiguration
des Host-Servers, der Samba ausführt, und Samba selbst.
</para>

<para>
Samba erlaubt einen höchst flexiblen Ansatz zur Netzwerk-Sicherheit. Samba implementiert so weit 
wie möglich die neuesten Protokolle, um sicherere MS-Windows-Datei- und Druck-Operationen zu
ermöglichen.
</para>

<para>
Samba kann gegenüber Verbindungen abgesichert werden, die von außerhalb des LAN herrühren.
Dies kann durch die Verwendung von <emphasis>host-based protection</emphasis> geschehen,
(unter Verwendung der Samba-Implementation einer Technologie namens <quote>tcpwrappers</quote>),
oder durch die Verwendung von <emphasis>interface-based exclusion</emphasis>, sodaß &smbd; sich
nur an bestimmte erlaubte Netz-Interfaces bindet. Es ist auch möglich, Ausschliessungen spezifisch
für Freigaben oder Ressourcen zu setzen, zum Beispiel auf die automatische Freigabe
<smbconfsection>[IPC$]</smbconfsection>. Diese Freigabe wird für Browsing-Zwecke ebenso verwendet, wie
zur Herstellung von TCP/IP-Verbindungen.
</para>

<para>
Eine andere Methode, um Samba abzusichern, ist das Setzen von "Access Control Entries" (ACEs) in einer
Zugriffs-Kontroll-Liste (ACL) auf den Freigaben selbst. Dies wird in <link linkend="AccessControls"/>
diskutiert.
</para>

</sect1>

<sect1>
<title>Technische Diskussion von Schutzmaßnahmen</title>

<para>
Die eigentliche Herausforderung der Sicherheit ist die Tatsache, daß Schutzmaßnahmen nur
dazu ausreichen, die Tür für bekannte "exploit"- und "breach"-Techniken zu schliessen.
Nehmen Sie niemals an, daß weil Sie diese paar Maßnahmen befolgt haben, der Samba-Server
nun eine uneinnehmbare Festung ist! Wenn man die bisherige Geschichte von Informations-Systemen
anschaut, ist es nur eine Frage der Zeit, bis jemand eine weitere Verletzlichkeit findet.
</para>

	<sect2>
	<title>Host-basierter Schutz</title>

	<para>
	In vielen Installationen von Samba kommt die größte Bedrohung von außerhalb
	des unmittelbaren Netzes. Standardmässig akzeptiert Samba Verbindungen von jedem
	Host, was bedeutet, daß wenn Sie eine unsichere Version von Samba auf einem Host
	ausführen, der direkte Verbindung zum Internet hat, Sie besonders gefährdet sein
	können.
	</para>

	<para>
	Eine der einfachsten Abhilfen in diesem Fall ist die Verwendung der Optionen
	<smbconfoption><name>hosts allow</name></smbconfoption> und
	<smbconfoption><name>hosts deny</name></smbconfoption> in der &smb.conf; Konfigurations-Datei,
	um den Zugriff auf Ihren Server auf eine spezifizierte Menge von Hosts einzuschränken.
	Ein Beispiel könnte sein:	
	</para>

	<para><smbconfblock>
<smbconfoption><name>hosts allow</name><value>127.0.0.1 192.168.2.0/24 192.168.3.0/24</value></smbconfoption>
<smbconfoption><name>hosts deny</name><value>0.0.0.0/0</value></smbconfoption>
	</smbconfblock></para>

	<para>
	Obiges wird nur SMB-Verbindungen von <constant>localhost</constant> (Ihrem eigenen Rechner)
	und von den beiden privaten Netzen 192.168.2 und 192.168.3 erlauben. Alle anderen
	Verbindungen werden abgelehnt, sobald der Client sein erstes Paket sendet.
	Die Ablehnung wird als <errorname>not listening on called name</errorname>-Fehler
	gekennzeichnet.
	</para>

	</sect2>

	<sect2>
	<title>Benutzer-basierter Schutz</title>

	<para>
	Wenn Sie den Zugriff auf Ihren Server nur auf gültige Benutzer beschränken wollen, kann
	folgende Methode von Nutzen sein. Im Abschnitt <smbconfsection>[global]</smbconfsection>
	der Datei &smb.conf; setzen Sie:
	</para>

	<para><smbconfblock>
<smbconfoption><name>valid users</name><value>@smbusers, jacko</value></smbconfoption>
	</smbconfblock></para>

	<para>
	Dies schränkt allen Server-Zugriff auf entweder den Benutzer <emphasis>jacko</emphasis>,
	oder Mitglieder der System-Gruppe <emphasis>smbusers</emphasis> ein.
	</para>

	</sect2>

	<sect2>

	<title>Benutzen von Schnittstellen-Schutz</title>

	<para>
	Standardmässig akzeptiert Samba Verbindungen auf jeder Netzwerk-Schnittstelle, die
	es in Ihrem System findet. Das bedeutet, daß wenn Sie eine ISDN-Verbindung oder
	einen PPP-Tunnel zum Internet haben, wird Samba Verbindungen über diese
	Schnittstellen akzeptieren. Das könnte etwas sein, daß Sie nicht wollen.
	</para>

	<para>
	Sie können dieses Verhalten ändern:	
	</para>

	<para><smbconfblock>
<smbconfoption><name>interfaces</name><value>eth* lo</value></smbconfoption>
<smbconfoption><name>bind interfaces only</name><value>yes</value></smbconfoption>
	</smbconfblock></para>

	<para>
	Dies weist Samba an, Verbindungen nur auf Schnittstellen zu erwarten, die mit
	<constant>eth</constant> beginnen, wie <constant>eth0, eth1</constant>, sowie auf
	dem loopback-Interface namens <constant>lo</constant>. Der zu verwendende Name
	hängt vom verwendeten Betriebssystem ab. In obigem Beispiel wurden die unter Linux
	gängigen Namen für Ethernet-Karten verwendet.	
	</para>

	<para>
	Wenn Sie das obige Beispiel verwenden, und jemand versucht, 
	eine SMB-Verbindung über eine PPP-Schnittstelle namens <constant>ppp0</constant> herzustellen,
	wird er eine Ablehnung erhalten. In diesem Fall wird keinerlei Samba-Code ausgeführt,
	da das OS angewiesen wurde, keine Verbindungen von dieser Schnittstelle an jeglichen
	Samba-Prozeß weiterzuleiten.
	</para>

	</sect2>

	<sect2>
	<title>Verwendung einer Firewall</title>

	<para>
	Viele verwenden eine Firewall, um Zugriff auf Dienste zu sperren, die sie nicht
	außerhalb ihres Netzwerks anbieten wollen. Dies kann eine gute Idee sein, obwohl
	wir es empfehlen, die Firewall gemeinsam mit obigen Methoden einzusetzen, so daß
	Sie auch geschützt sind, wenn die Firewall aus irgendwelchen Gründen nicht
	aktiv ist.
	</para>

	<para>
	Wenn Sie eine Firewall aufsetzen, müssen Sie wissen, welche TCP- und UDP-ports
	zu öffnen bzw. zu blockieren sind. Samba benutzt die folgenden Ports:	
	</para>

	<simplelist>
		<member>UDP/137 - verwendet von nmbd</member>
		<member>UDP/138 - verwendet von nmbd</member>
		<member>TCP/139 - verwendet von smbd</member>
		<member>TCP/445 - verwendet von smbd</member>
	</simplelist>

	<para>
	Der letzte Port ist wichtig, da ihn viele ältere Firewall-Setups möglicherweise
	nicht berücksichtigen, weil dieser Port erst in den letzten Jahren zum Protokoll
	hinzugefügt wurde.	
	</para>

	</sect2>

	<sect2>
	<title>Verwenden von IPC$-Freigaben-basierenden Ablehnungen</title>

	<para>
	Wenn die obigen Methoden nicht anwendbar sind, könnten Sie auch eine mehr
	spezifische Ablehnung auf der IPC$-Freigabe setzen, die in einer kürzlich
	entdeckten Sicherheitslücke verwendet wird. Dies erlaubt Ihnen, Zugriff auf
	andere Freigaben anzubieten, während Sie den Zugriff von potentiell
	nicht vertrauenswürdigen Hosts auf IPC$ ablehnen.
	</para>

	<para>
	Um dies zu tun, könnten Sie folgendes verwenden:	
	</para>

	<para><smbconfblock>
<smbconfsection>[IPC$]</smbconfsection>
<smbconfoption><name>hosts allow</name><value>192.168.115.0/24 127.0.0.1</value></smbconfoption>
<smbconfoption><name>hosts deny</name><value>0.0.0.0/0</value></smbconfoption>
	</smbconfblock></para>

	<para>
	Dies weist Samba an, daß IPC$-Verbindungen nicht erlaubt sind, außer von den zwei
	angeführten Netzwerk-Adressen (localhost und das Subnetz 192.168.115).
	Verbindungen zu anderen Freigaben sind weiter erlaubt. Da die IPC$-Freigabe die 
	einzige Freigabe ist, auf die anonym zugegriffen werden kann, schafft dies einen
	gewisse Schutz gegen Angreifer, die keine gültige Benutzernamen/Paßwort-Kombination
	für Ihren Server kennen.
	</para>

	<para>
	Wenn Sie diese Methode anwenden, werden Clients eine <errorname>`access denied'</errorname>-Meldung
	erhalten, wenn Sie sich mit der IPC$-Freigabe zu verbinden versuchen. Diese Clients
	werden keine Freigaben durchsuchen können, und sie können auch manche andere Dienste
	nicht benutzen können. Diese Methode wird nicht empfohlen, außer Sie können aus einem
	bestimmten Grund keine der anderen oben beschriebenen Methoden anwenden.
	</para>

	</sect2>

	<sect2>
	<title>NTLMv2-Sicherheit</title>

	<para>
	Um NTLMv2-Authentifizierung zu konfigurieren, sind die folgenden Registrierungs-Schlüssel
	wichtig:
	</para>

	<para>
		<screen>
		[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa]
		"lmcompatibilitylevel"=dword:00000003
		</screen>
	</para>

	<para>
	Der Wert 0x00000003 bedeutet, daß nur NTLMv2-Antworten gesendet werden.
	Clients werden NTLMv2-Authentifizierung verwenden, und NTLMv2-Session-Security, wenn
	es der Server unterstützt. Domänen-Controller akzeptieren LM, NTLM, und NTLMv2-Authentifizierung.
	</para>

	<para>
		<screen>
		[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0]
		"NtlmMinClientSec"=dword:00080000
		</screen>
	</para>

	<para>
	Der Wert 0x00080000 bedeutet, daß nur NTLMv2-Session-Security akzeptiert wird.
	Wenn entweder NtlmMinClientSec oder NtlmMinServerSec auf 0x00080000 gesetzt ist, wird
	die Verbindung fehlschlagen, wenn NTLMv2-Session-Security nicht verhandelt wird.
	</para>
	</sect2>
</sect1>

<sect1>
<title>Upgrade von Samba</title>

<para>
Bitte überprüfen Sie regelmässig <ulink noescape="1" url="http://www.samba.org/">http://www.samba.org/</ulink>
für Updates und wichtige Verlautbarungen. Gelegentlich werden Sicherheits-Releases herausgegeben, und es
ist wärmstens empfohlen, ein Upgrade von Samba durchzuführen, wenn eine Sicherheits-Lücke entdeckt wird.
Prüfen Sie auch die Seiten des Lieferanten Ihres Betriebssystems auf Upgrades, die spezifisch für Ihr
Betriebssystem sind. 
</para>

</sect1>

<sect1>
<title>Häufige Fehler</title>

<para>
Wenn die ganze Konfiguration von Samba und seiner Host-Plattform wirklich so intuitiv wäre, wie es sich
mancher wünscht, dann wäre dieser Abschnitt unnötig. Sicherheits-Fragen sind oft ärgerlich für die
Support-Person, die sie aufzulösen hat, nicht nur wegen der Komplexität des Problems, sondern aus dem Grund,
daß die meisten Administratoren, die von etwas berichten, das sich dann als Sicherheits-Problem
herausstellt, völlig überzeugt davon sind, daß das Problem an Samba liegt.
</para>

	<sect2>
	<title>Smbclient funktioniert auf Localhost, aber das Netzwerk ist tot</title>

	<para>
	Das ist ein verbreitetes Problem. Red Hat Linux (und andere) installiert eine Firewall.
	Mit der Standard-Firewall wird nur Verkehr auf dem loopback-Adapter (IP 127.0.0.1)
	durch die Firewall gelassen.
	</para>

	<para>
	Die Lösung ist es, entweder die Firewall zu entfernen (stoppen), oder das Firewall-Skript
	so zu modifizieren, daß die Firewall SMB-Netzwerk-Verkehr durchläßt.
	Siehe den obigen Abschnitt hierzu.	
	</para>

	</sect2>

	<sect2>
	<title>Warum können Benutzer auf die home-Verzeichnisse anderer Benutzer zugreifen?</title>

	<para>
	<quote>
	We are unable to keep individual users from mapping to any other user's
	home directory once they have supplied a valid password! They only need
	to enter their own password. I have not found any method to configure
	Samba so that  users may map only their own home directory.
	</quote>
	</para>

	<para><quote>
	User xyzzy can map his home directory. Once mapped user xyzzy can also map
	anyone else's home directory.
	</quote></para>

	<para>
	Dies ist kein Sicherheits-Versäumnis, sondern per Design vorgesehen.
	Samba erlaubt Benutzern	denselben Zugriff auf das UNIX-Dateisystem, wie wenn
	sie an der UNIX-Maschine angemeldet wären, mit der Einschränkung, daß es nur
	Zugriff auf die Dateien erlaubt, die von den definierten Freigaben erlaubt sind.
	</para>

	<para>
	Wenn Ihre UNIX-home-Verzeichnisse so angelegt sind, daß ein Benutzer einfach per
	<command>cd</command> in das home-Verzeichnis eines anderen Benutzers gelangen und
	<command>ls</command> ausführen kann, so ist die UNIX-Sicherheits-Lösung dafür,
	die Datei-Erlaubnisse für die home-Verzeichnisse so zu setzen, daß die Befehle
	<command>cd</command> und <command>ls</command> abgelehnt werden.	
	</para>

	<para>
	Samba versucht sehr streng, die Sicherheits-Richtlinien des UNIX-Administrators
	nicht zu hinterfragen, und ihm zu vertrauen, die Richtlinien und Erlaubnisse so zu setzen,
	wie er es für richtig hält.	
	</para>

	<para>
	Samba eröaubt das gewünschte Verhalten. Setzen Sie einfach die Option
	<smbconfoption><name>only user</name><value>%S</value></smbconfoption> im Abschnitt der
	<smbconfsection>[homes]</smbconfsection>-Freigaben-Definition.
	</para>

	<para>
	Die Option <smbconfoption><name>only user</name><value></value></smbconfoption> arbeitet
	in Wechselwirkung mit <smbconfoption><name>users</name><value>list</value></smbconfoption>,
	also müssen Sie, um das gewünschte Verhalten zu erzielen, die Zeile hinzufügen:
	<smbconfblock>
<smbconfoption><name>users</name><value>%S</value></smbconfoption>
</smbconfblock>
	Dies ist gleichbedeutend zum Hinzufügen von
	<smbconfblock>
<smbconfoption><name>valid users</name><value>%S</value></smbconfoption>
	</smbconfblock>
	zur Definition der <smbconfsection>[homes]</smbconfsection>-Freigabe, wie in der manpage
	zu &smb.conf; empfohlen.	
	</para>
	</sect2>

</sect1>
</chapter>
