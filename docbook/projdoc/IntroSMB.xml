<chapter id="IntroSMB">
<chapterinfo>
	&author.dlechnyr;
	&author.hba;
	<pubdate>April 14, 2003</pubdate>
</chapterinfo>

<title>Einf&uuml;rung in Samba</title>

<para><quote>
"Wenn du verstehst was du tust, wirst du nichts lernen"
-- Anonym
</quote></para>

<para>
Samba ist ein Datei- und Druckserver f&uuml;r auf Windows basierende Clients die TCP/IP als transport Protokol nutzen.
Tats&auml;chlich kann es jeden SMB/CIFS-aktiven Client unterst&uuml;tzen. Eine von Samba's grossen St&auml;rken ist, dass Sie in der
Lage sind ihre Windows und Linux Maschienen zusammen zu mixen ohne einen separaten Windows NT/2000/2003 Server zu ben&auml;tigen.
Samba wird derzeit von einem 30 Kopfigen Team von Programmieren entwickelt und wurde urspr&uuml;nglich von Andrew Tridgell entwickelt.
</para>

<sect1>
<title>Hintergrund</title>

<para>
Vor langer Zeit gab es ein Schl&uuml;sselwort welches auf DCE/RPC referenzierte. Dies stand f&uuml;r
Computing Environment/Remote Procedure Calls and war vom Konzept her eine gute Idee. Urspr&uuml;nglich
wurde es von Apollo/HP als NCA1.0 (Network Computing Architecture entwickelt und konnte nur &uuml;ber
UDP benutzt werden. Als es n&auml;tig wurde das ganze &uuml;ber TCP zu betreiben um die Kompatibilit&auml;t zu
DECnet3.0 gew&auml;hrleisten zu k&auml;nnen, wurde es neu entworfen, zur Organisation The Open Group gesandt
und wurde offiziell als DCE/RPC bekannt. Microsoft kam daher und entschied mehr als $20 f&uuml;r eine
Arbeitsplatz Lizens haben zu wollen und es als eigenes MSRPC verkaufen zu wollen. Von diesem Punkt
an wurde das Konzept in Form von SMB (Server Message Block, als "was") unter Benutzung von
NetBIOS (Network Basic Input/Output System, als "wie") als Komatibilit&auml;ts-Schicht weiter gef&uuml;hrt.
Sie k&auml;nnen SMB &uuml;ber viele verschieden Protokolle nutzen, sprich transportieren; viele verschiedene
Implementationen f&uuml;hren zu einem Ergebnis, einschlie&szlig;lich NBIPX (NetBIOS &uuml;ber IPX, NwLnkNb, oder NWNBLink)
und NBT (NetBIOS &uuml;ber TCP/IP, oder NetBT). &uuml;ber die Jahre hinweg wurde NBT die meist genutzte Form der
Implementationen bis zum Fortschritt des "Direct-Hosted TCP" -- der Microsoft Marketing Formulierung zur
vollst&auml;ndigen Eleminierung von NetBIOS und der M&auml;glichkeit SMB direkt &uuml;ber den TCP port 445 laufen zu lassen.

As of yet, direct-hosted TCP has yet to catch on.
</para>

<para>
Es ist m&auml;glich, dass der bisher beste Artikel &uuml;ber den Ursprung von SMB im Jahre 1997 in einem Artikel
mit dem Titel: CIFS: Common Insecurities Fail Scrutiny erschienen ist.

Perhaps the best summary of the origins of SMB are voiced in the 1997 article titled, CIFS:
Common Insecurities Fail Scrutiny:
</para>

<para><emphasis>
Mehrere Megabytes aus NT-Security Archiven, ziellosen whitepapern, RFCs, der CIFS Spezifikation,
das Samba Zeug, ein paar MS Knowledge Base Artikeln, Zeichenketten aus Bin&auml;rdateien und Packet-Abbildungen
haben pflichtbewu&szlig;t den Weg durch die Phasen der Informationssammlung dieses Projektes durch schritten und es
fehlen immer noch einige St&uuml;cke... Oftmals m&uuml;&szlig;ig wurde der Weg unordentlich gemacht durch "Hand vor die Stirn schlagen" und murmeln
"Mein Gott, was haben die sich dabei gedacht?"
Hier das Original:
Several megabytes of NT-security archives, random whitepapers, RFCs, the CIFS spec, the Samba
stuff, a few MS knowledge-base articles, strings extracted from binaries, and packet dumps have
been dutifully waded through during the information-gathering stages of this project, and there
are *still* many missing pieces... While often tedious, at least the way has been generously
littered with occurrences of clapping hand to forehead and muttering 'crikey, what are they
thinking?
</emphasis></para>

</sect1>

<sect1>
<title>Fachsprache</title>

<itemizedlist>

	<listitem><para>
	SMB: Akronym f&uuml;r "Server Message Block". Dies ist Microsoft's Datei- und Druckerfreigabe Protokol.
	</para></listitem>

	<listitem><para>
	CIFS: Akronym f&uuml;r "Common Internet File System". Um 1996 entschied Microsoft das SMB das Wort
	"Internet" im Namen br&auml;uchte und sie &auml;nderten den Namen in CIFS.
	</para></listitem>

	<listitem><para>
	Direct-Hosted: Eine Methode Datei/Drucker Freigabedienste &uuml;ber port 445/tcp zur Verf&uuml;gung zu stellen,
	Hierbei wurde nur DNS statt WINS zur Aufl&auml;sung der Namen in IP-Adressen benutzt
	</para></listitem>

	<listitem><para>
	IPC: Akronym f&uuml;r "Inter-Process Communication". Eine Methode spezielle Informationen zwischen Programmen
	zu verbreiten.
	</para></listitem>

	<listitem><para>
	Marshalling: - Eine Methode zur seq&uuml;ntiellen Sortierung von variablen Daten,
	passend zur &uuml;bertragung &uuml;ber eine Netzwerkverbindung bzw. Speicherung in eine Datei.
	Die Q&uuml;lldateien k&ouml;nnen mittels eines &auml;hnlichen Prozesses namens unmarschalling
	wiederhergestellt werden.
	</para></listitem>

	<listitem><para>
	NetBIOS: Akronym for "Network Basic Input/Output System". This is not a protocol;
	it is a method of communication across an existing protocol. This is a standard which
	was originally developed for IBM by Sytek in 1983. To exaggerate the analogy a bit,
	it can help to think of this in comparison your computer's BIOS -- it controls the
	essential functions of your input/output hardware -- whereas NetBIOS controls the
	essential functions of your input/output traffic via the network. Again, this is a bit
	of an exaggeration but it should help that paradigm shift. What is important to realize
	is that NetBIOS is a transport standard, not a protocol. Unfortunately, even technically
	brilliant people tend to interchange NetBIOS with terms like NetBEUI without a second
	thought; this will cause no end (and no doubt) of confusion.
	</para></listitem>

	<listitem><para>
	NetBEUI: Akronym for the "NetBIOS Extended User Interface". Unlike NetBIOS, NetBEUI
	is a protocol, not a standard. It is also not routable, so traffic on one side of a
	router will be unable to communicate with the other side. Understanding NetBEUI is
	not essential to deciphering SMB; however it helps to point out that it is not the
	same as NetBIOS and to improve your score in trivia at parties. NetBEUI was originally
	referred to by Microsoft as "NBF", or "The Windows NT NetBEUI Frame protocol driver".
	It is not often heard from these days.
	</para></listitem>

	<listitem><para>
	NBT: Akronym for "NetBIOS over TCP"; also known as "NetBT". Allows the contin&uuml;d use
	of NetBIOS traffic proxied over TCP/IP. As a result, NetBIOS names are made
	to IP addresses and NetBIOS name types are conceptually equivalent to TCP/IP ports.
	This is how file and printer sharing are accomplished in Windows 95/98/ME. They
	traditionally rely on three ports: NetBIOS Name Service (nbname) via UDP port 137,
	NetBIOS Datagram Service (nbdatagram) via UDP port 138, and NetBIOS Session Service
	(nbsession) via TCP port 139. All name resolution is done via WINS, NetBIOS broadcasts,
	and DNS. NetBIOS over TCP is documented in RFC 1001 (Concepts and methods) and RFC 1002
	(Detailed specifications).
	</para></listitem>

	<listitem><para>
	W2K: Akronym for Windows 2000 Professional or Server
	</para></listitem>

	<listitem><para>
	W3K: Akronym for Windows 2003 Server
	</para></listitem>

</itemizedlist>

<para>If you plan on getting help, make sure to subscribe to the Samba Mailing List (available at
<ulink url="http://www.samba.org/">http://www.samba.org</ulink>).
</para>

</sect1>

<sect1>
<title>Related Projects</title>

<para>
There are currently two network filesystem client projects for Linux that are directly
related to Samba: SMBFS and CIFS VFS.  These are both available in the Linux kernel itself.
</para>

<itemizedlist>

	<listitem><para>
	SMBFS (Server Message Block File System) allows you to mount SMB shares (the protocol
	that Microsoft Windows and OS/2 Lan Manager use to share files and printers
	over local networks) and access them just like any other Unix directory. This is useful
	if you just want to mount such filesystems without being a SMBFS server.
	</para></listitem>

	<listitem><para>
	CIFS VFS (Common Internet File System Virtual File System) is the successor to SMBFS, and
        is being actively developed for the upcoming version of the Linux kernel. The intent of this module
        is to provide advanced network file system functionality including support for dfs (hierarchical
	name space), secure per-user session establishment, safe distributed caching (oplock),
	optional packet signing, Unicode and other internationalization improvements, and optional
	Winbind (nsswitch) integration.
        </para></listitem>

</itemizedlist>

<para>
Again, it's important to note that these are implementations for client filesystems, and have
nothing to do with acting as a file and print server for SMB/CIFS clients.
</para>

<para>
There are other Open Source CIFS client implementations, such as the
<ulink url="http://jcifs.samba.org/">jCIFS project</ulink>
which provides an SMB client toolkit written in Java.
</para>


</sect1>


<sect1>
<title>SMB Methodology</title>

<para>
Traditionally, SMB uses UDP port 137 (NetBIOS name service, or netbios-ns),
UDP port 138 (NetBIOS datagram service, or netbios-dgm), and TCP port 139 (NetBIOS
session service, or netbios-ssn). Anyone looking at their network with a good
packet sniffer will be amazed at the amount of traffic generated by just opening
up a single file. In general, SMB sessions are established in the following order:
</para>

<itemizedlist>
	<listitem><para>
	"TCP Connection" - establish 3-way handshake (connection) to port 139/tcp
    or 445/tcp.
	</para></listitem>

	<listitem><para>
	"NetBIOS Session Req&uuml;st" - using the following "Calling Names": The local
    machine's NetBIOS name plus the 16th character 0x00; The server's NetBIOS
    name plus the 16th character 0x20
	</para></listitem>

	<listitem><para>
	"SMB Negotiate Protocol" - determine the protocol dialect to use, which will
    be one of the following: PC Network Program 1.0 (Core) - share level security
    mode only; Microsoft Networks 1.03 (Core Plus) - share level security
    mode only; Lanman1.0 (LAN Manager 1.0) - uses Challenge/Response
    Authentication; Lanman2.1 (LAN Manager 2.1) - uses Challenge/Response
    Authentication; NT LM 0.12 (NT LM 0.12) - uses Challenge/Response
    Authentication
	</para></listitem>

	<listitem><para>
	SMB Session Startup. Passwords are encrypted (or not) according to one of
    the following methods: Null (no encryption); Cleartext (no encryption); LM
    and NTLM; NTLM; NTLMv2
	</para></listitem>

	<listitem><para>
	SMB Tree Connect: Connect to a share name (e.g., \\servername\share); Connect
    to a service type (e.g., IPC$ named pipe)
	</para></listitem>

</itemizedlist>

<para>
A good way to examine this process in depth is to try out
<ulink url="http://www.securityfriday.com/ToolDownload/SWB/swb_doc.html">SecurityFriday's SWB program</ulink>.
It allows you to walk through the establishment of a SMB/CIFS session step by step.
</para>

</sect1>

<sect1>
<title>Epilog&uuml;</title>

<para><quote>
What's fundamentally wrong is that nobody ever had any taste when they
did it. Microsoft has been very much into making the user interface look good,
but internally it's just a complete mess. And even people who program for Microsoft
and who have had years of experience, just don't know how it works internally.
Worse, nobody dares change it. Nobody dares to fix bugs because it's such a
mess that fixing one bug might just break a hundred programs that depend on
that bug. And Microsoft isn't interested in anyone fixing bugs -- they're interested
in making money. They don't have anybody who takes pride in Windows 95 as an
operating system.
</quote></para>

<para><quote>
People inside Microsoft know it's a bad operating system and they still
contin&uuml; obviously working on it because they want to get the next version out
because they want to have all these new features to sell more copies of the
system.
</quote></para>

<para><quote>
The problem with that is that over time, when you have this kind of approach,
and because nobody understands it, because nobody REALLY fixes bugs (other than
when they're really obvious), the end result is really messy. You can't trust
it because under certain circumstances it just spontaneously reboots or just
halts in the middle of something that shouldn't be strange. Normally it works
fine and then once in a bl&uuml; moon for some completely unknown reason, it's dead,
and nobody knows why. Not Microsoft, not the experienced user and certainly
not the completely cl&uuml;less user who probably sits there shivering thinking
"What did I do wrong?" when they didn't do anything wrong at all.
</quote></para>

<para><quote>
That's what's really irritating to me."
</quote></para>

<para>--
<ulink url="http://hr.uoregon.edu/davidrl/boot.txt">Linus Torvalds, from an interview with BOOT Magazine, Sept 1998</ulink>
</para>

</sect1>

<sect1>
<title>Miscellaneous</title>

<!--FIXME: This really needs to go... -->

<para>
This chapter is Copyright 2003 David Lechnyr (david at lechnyr dot com).
Permission is granted to copy, distribute and/or modify this document under the terms
of the GNU Free Documentation License, Version 1.2 or any later version published by the Free
Software Foundation. A copy of the license is available at http://www.gnu.org/licenses/fdl.txt.
</para>

</sect1>
</chapter>
