<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="IntroSMB">
<chapterinfo>
	&author.dlechnyr;
	<author>&person.hba;<contrib>German Translator</contrib></author>
	<pubdate>April 14, 2003</pubdate>
</chapterinfo>

<TITLE>Einfürung in Samba</TITLE>

<para><quote>
"Wenn du verstehst was du tust, wirst du nichts lernen"
-- Anonym
</quote></para>

<para>
Samba ist ein Datei- und Druckserver für auf Windows basierende Clients die TCP/IP als Transport Protokol nutzen.
Tatsächlich kann es jeden SMB/CIFS-aktiven Client unterstützen. Eine von Samba's großen Stärken ist, dass Sie in der
Lage sind ihre Windows und Linux Maschinen zusammen zu mixen ohne einen separaten Windows NT/2000/2003 Server zu benötigen.
Samba wird derzeit von einem 30 köpfigen Team von Programmierern entwickelt und wurde ursprünglich von Andrew Tridgell entwickelt.
</para>

<sect1>
<TITLE>Hintergrund</TITLE>

<para>
Vor langer Zeit gab es ein Schlüsselwort welches auf DCE/RPC referenzierte. Dies stand für
Computing Environment/Remote Procedure Calls und war vom Konzept her eine gute Idee. Ursprünglich
wurde es von Apollo/HP als NCA1.0 (Network Computing Architecture) entwickelt und konnte nur über
UDP benutzt werden. Als es nötig wurde das ganze über TCP zu betreiben um die Kompatibilität zu
DECnet3.0 gewährleisten zu können, wurde es neu entworfen, zur Organisation "The Open Group" gesandt
und offiziell als DCE/RPC bekannt. Microsoft kam allerdings daher und entschied mehr als $20 für eine
Arbeitsplatz Lizens haben zu wollen und es als eigenes MSRPC verkaufen zu wollen. Von diesem Punkt
an wurde das Konzept in Form von SMB (Server Message Block, das "was") unter Benutzung von
NetBIOS (Network Basic Input/Output System, das "wie") als Komatibilitäts-Schicht weiter geführt.
Sie können SMB über viele verschiedene Protokolle nutzen, sprich transportieren; viele verschiedene
Implementationen führen zu einem Ergebnis, einschließlich NBIPX (NetBIOS über IPX, NwLnkNb, oder NWNBLink)
und NBT (NetBIOS über TCP/IP, oder NetBT). Über die Jahre hinweg wurde NBT zur meist genutzten Form der
Implementationen bis zum Fortschritt des "Direct-Hosted TCP" -- der Microsoft Marketing Formulierung zur
vollständigen Eleminierung von NetBIOS und der Möglichkeit SMB direkt an den TCP port 445 zu binden.

<!-- Also zu diesem Satz weiß ich keine Übersetzung zu finden.-->
As of yet, direct-hosted TCP has yet to catch on.
</para>

<para>
Der wohl beste Artikel über den Ursprung von SMB erschien 1997 in einem Artikel mit dem Titel -
"CIFS: Common Insecurities Fail Scrutiny".
</para>

<para><emphasis>
Mehrere Megabytes aus NT-Security Archiven, ziellosen Whitepapern, RFCs, der CIFS Spezifikation,
das Samba Zeug, ein paar MS Knowledge Base Artikeln, Zeichenketten aus Binärdateien und Packet-Abbildungen
haben pflichtbewußt den Weg durch die Phasen der Informationssammlung dieses Projektes durchschritten und es
fehlen immer noch einige Stücke... Oftmals müßig wurde der Weg erschwert durch "Hand vor die Stirn schlagen"
und murmeln "Mein Gott, was haben die sich dabei gedacht?"
</emphasis></para>

<para><emphasis>
Hier das Original:
Several megabytes of NT-security archives, random whitepapers, RFCs, the CIFS spec, the Samba
stuff, a few MS knowledge-base articles, strings extracted from binaries, and packet dumps have
been dutifully waded through during the information-gathering stages of this project, and there
are *still* many missing pieces... While often tedious, at least the way has been generously
littered with occurrences of clapping hand to forehead and muttering 'crikey, what are they
thinking?
</emphasis></para>

</sect1>

<sect1>
<TITLE>Fachsprache</TITLE>

<itemizedlist>

	<listitem><para>
	SMB: Akronym für "Server Message Block". Dies ist Microsoft's Datei- und Druckerfreigabe Protokol.
	</para></listitem>

	<listitem><para>
	CIFS: Akronym für "Common Internet File System". Um 1996 entschied Microsoft das SMB das Wort
	"Internet" im Namen bräuchte und sie änderten den Namen in CIFS.
	</para></listitem>

	<listitem><para>
	Direct-Hosted: Eine Methode Datei/Drucker Freigabedienste über port 445/tcp zur Verfügung zu stellen,
	Hierbei wurde nur DNS statt WINS zur Auflösung der Namen in IP-Adressen benutzt
	</para></listitem>

	<listitem><para>
	IPC: Akronym für "Inter-Process Communication". Eine Methode spezielle Informationen zwischen Programmen
	zu verbreiten.
	</para></listitem>

	<listitem><para>
	Marshalling: - Eine Methode zur seqüntiellen Sortierung von variablen Daten,
	passend zur übertragung über eine Netzwerkverbindung bzw. Speicherung in eine Datei.
	Die Quelldateien können mittels eines ähnlichen Prozesses namens unmarschalling
	wiederhergestellt werden.
	</para></listitem>

	<listitem><para>
	NetBIOS: Akronym für "Network Basic Input/Output System". Dies ist kein Protokol;
	es ist eine Möglichkeit der Kommunikations über ein anderes Protokol.
	Dies ist ein Standard welcher ursprünglich 1983 von IBM entwickelt wurde.
	Um die Analogie ein wenig zu übertreiben könnte man NetBIOS mit dem BIOS ihres Rechners vergleichen,
	ihr BIOS kontrolliert die Ein-/Ausgabe der Hardware ihres Rechners und NetBIOS kontrolliert die Ein-/Ausgaben
	über das Netzwerk.
	Nochmals, dies ist eine kleine übertreibung sollte aber helfen dieses Paradigma verständlich zu machen.
	Was wichtig ist, ist die Tatsache das NetBIOS kein Protokol sondern ein übermittlungsstandard ist.
	Leider tendieren auch technisch Versierte Leute dazu ohne viel darüber nachzudenken NetBIOS mit NetBEUI zu
	verwechseln;
	</para></listitem>

	<listitem><para>
	NetBEUI: Akronym für das "NetBIOS Extended User Interface". Nicht vergleichbar mit NetBIOS ist NetBEUI
	ein Protokol, kein Standard. Es ist auch kein Routingfähiges Protokol, was wiederum heißt, dass es nicht
	von einer Seite eines Routers auf die andere gelangt. Es ist nicht notwendig NetBEUI zu verstehen um SMB
	zu entziffern; es hilft zu verstehen, es hilft zu verstehen dass NetBEUI nicht das gleiche wie NetBIOS ist
	um ihren Schnitt auf Parties zu erhöhen. NetBEUI wurde ursprünglich von Microsoft als "NBF" oder "Dem
	Windows NT NetBEUI Frame Protokol Treiber" verwiesen. Heutzutage hört man da nicht viel von.
	</para></listitem>

	<listitem><para>
	NBT: Akronym für "NetBIOS über TCP" auch bekannt als "NetBT". Erlaubt die Benutzung von NetBIOS Verkehrs
	im TCP/IP. Im Endeffekt werden NetBIOS Namen zu IP Adressen gewandelt und NetBIOS Namenstypen sind im
	grunde genommen mit TCP/IP Ports vergleichbar. So werden in Windows 95/98/ME die Datei- und Druckerfreigaben
	verwirklicht. Traditionell sind sie an drei Ports gebunden: NetBIOS Name Service (nbname) über UDP Port 137,
	NetBIOS Datagramm Service (nbdatagram) über UDP Port 138 und der NetBIOS Session Service (nbsession) über
	TCP Port 139. Jegliche Namensauflösung wird über WINS erledigt, NetBIOS broadcasts (Anm. des Übersetzers:
	broadcasts sind Netzwerkausrufe an alle anderen Stationen im Umkreis) und DNS. NetBIOS über TCP wird im RFC 1001
	(Konzepte und Methoden) und RFC 1002 (Detailierte Spezifikationen) beschrieben.
	</para></listitem>

	<listitem><para>
	W2K: Akronym für Windows 2000 Professional oder Server
	</para></listitem>

	<listitem><para>
	W3K: Akronym für Windows 2003 Server
	</para></listitem>

</itemizedlist>

<para>Wenn Sie hilfe benötigen, wenden Sie sich bitte an die Samba Mailing Liste (Erreichbar über
<ulink url="http://www.samba.org/">http://www.samba.org</ulink>).
</para>

</sect1>

<sect1>
<TITLE>Verwandte Projekte</TITLE>

<para>
Derzeit gibt es zwei weitere Netzwerk Dateisystem Client Projekte für Linux die direkt mit Samba in Verbindung stehen:
SMBFS und CIFS VFS. Sie sind beide im Linux Kernel verfügbar.
</para>

<itemizedlist>

	<listitem><para>
	SMBFS (Server Message Block File System) erlaubt es SMB Freigaben unter Linux zu mounten (binden); Das Protokol
	welches Microsoft Windows und OS/2 Lan Manager zur Freigabe von Dateien und Druckern über lokale Netzwerke
	verwenden lässt sich hier nutzen um entfernte Shares ähnlich wie andere Unix Verzeichnisse zu binden.
	Dies ist nützlich wenn Sie nur solche Dateisysteme mounten wollen ohne gleich selbst ein SMBFS Server zu sein.
	</para></listitem>

	<listitem><para>
	CIFS VFS (Common Internet File System Virtual File System) ist der Nachfolger von SMBFS und wird derzeit aktiv
	für die neue Version des Linux Kernels entwickelt. Die Absicht dieses Moduls ist es erweiterte Netzwerkdateisysteme
	Funktionen wie Unterstützung von dfs (hierarischer Namensplatz / hierarchical name space), sichere "Pro-User"
	Sessions, sicheres verteiltes zwischenspeichern (oplock), optionales signieren von Paketen, den Unicode Zeichensatz
	und weitere Internationalisierte Verbesserungen zu unterstützen und die optionale Einbindung von Winbind (nsswitch).
    </para></listitem>

</itemizedlist>

<para>
Hinweis: es ist wichtig zu erkennen das dies nur implementationen für Client Dateisysteme sind und nichts
damit zu tun haben selbst als Datei- und Druckserver zu aggieren.
</para>

<para>
Es gibt noch weitere Open Source CIFS client Tools wie zum Beispiel dem
<ulink url="http://jcifs.samba.org/">jCIFS Projekt</ulink>
welches ein SMB Client Toolkit in Java geschrieben zur Verfügung stellt.
</para>


</sect1>


<sect1>
<TITLE>SMB Methodologie</TITLE>

<para>
Traditionell nutzt SMB den UDP Port 137 (NetBIOS name service oder nerbios-ns), den UDP Port
138 (NetBIOS datagramm service oder netbios-dgm) und den TCP Port 139 (NetBIOS
session service oder netbios-ssn). Jeder der mit einem guten Netzwerk Packet Analyse Programm
sein Netzwerk beobachtet wird amüsiert sein über die Menge an Verkehr welcher ausgelöst wird
nur wenn man eine einzige Datei öffnet. Grundlegend werden SMB Sitzungen/Sessions in folgender
Reihenfolge aufgebaut:
</para>

<itemizedlist>
	<listitem><para>
	"TCP Verbindung" - aufbau des 3-Wege Handschlags (Verbindung) zu Port 139/tcp
    oder 445/tcp.
	</para></listitem>

	<listitem><para>
	"NetBIOS Session Anfrage" - Benutzt folgende Rufnamen: Den lokalen NetBIOS Namen der lokalen
	Maschine zzgl. den 16. Buchstaben 0x00 und den NetBIOS Namen des Servers zzgl. 0x20 als 16. Buchstaben.
	</para></listitem>

	<listitem><para>
	"SMB Negotiate Protocol" - bestimmt den Protokol-Dialekt der benutzt werden soll, dieser Dialekt
	kann einer der folgenden sein:
	PC Network Program 1.0 (Core) - nur share level security modus;
	Microsoft Networks 1.03 (Core Plus) - nur share level security modus;
	Lanman1.0 (LAN Manager 1.0) - nutzt Challenge/Response Authentication;
	Lanman2.1 (LAN Manager 2.1) - nutzt Challenge/Response Authentication;
	NT LM 0.12 (NT LM 0.12) - nutzt Challenge/Response Authentication
	</para></listitem>

	<listitem><para>
	SMB Session Startup. Passwörter werden nach folgenden Methoden verschlüsselt (oder auch nicht):
    Null (keine Verschlüsselung); Cleartext/Klartext (keine Verschlüsselung); LM
    und NTLM; NTLM; NTLMv2
	</para></listitem>

	<listitem><para>
	SMB Tree Connect: Verbindung zu einem Freigabenamen (z.B., \\servername\share); Verbindung
    zu einem Servicenamen (z.B., IPC$)
	</para></listitem>

</itemizedlist>

<para>
Eine gute Art diesen Prozess zu untersuchen ist das
<ulink url="http://www.securityfriday.com/ToolDownload/SWB/swb_doc.html">SecurityFriday's SWB Program</ulink>
aus zu probieren.
Es ermöglicht es ihnen Schritt für Schritt durch eine SMB/CIFS Sitzung zu gehen.
</para>

</sect1>

<sect1>
<TITLE>Epilog</TITLE>

<para><quote>
Was grundlegend Falsch ist, ist das niemand einen Geschmack finden kann wenn er es nicht probiert hat.
Microsoft hat stark daran gearbeitet die Oberfläche schön zu gestalten, nur intern ist es eine komplette Unordnung.
Auch Mitarbeiter von Microsoft die seit Jahren dort Arbeiten und viel Erfahrung mit sich bringen, haben
keine Ahnung was intern wirklich abläuft. Schlimm das niemand sich traut dies zu ändern. Niemand traut sich
einen Bug zu fixen nur weil die Gefahr besteht, dass dieser Fix hunderte von Programmen zum Absturz bringen kann.
Dazu kommt das Microsoft nicht daran interessiert ist Bugs zu fixen -- sie sind vielmehr daran interessiert
Geld zu machen. Sie haben niemanden der Stolz ist in Windows 95 ein Betriebssystem zu sehen.
</quote></para>

<para><quote>
Die Leute von Microsoft wissen dass es ein schlechtes Betriebssystem ist und arbeiten weiter daran weil sie die
nächste Version auf den Markt bringen wollen, um all die neuen Möglichkeiten des Systems verkaufen zu können.
</quote></para>

<para><quote>
Das Problem hierbei ist, dass wenn Sie über die Zeit Verständnis hierfür entwickeln ohne es zu vertehen, da niemand
WIRKLICH Probleme behebt, ist das Endergebnis stark verpfuscht.
Sie können dem System nicht vertrauen da es unter bestimmten Bedingungen es einfach spontan neu startet oder
einfach nur stehen bleibt wenn Sie gerade etwas völlig normales machen. Normalerweise funktioniert es gut nur dann
irgendwann ohne Begründung ist es tot und niemand weiß warum. Nicht Microsoft, nicht die Erfahrenen Anwender
und schon gar nicht der Ahnungslose Benutzer der vor seinem Bildschirm sitzt und sich fragt: "Was hab
ich bloß falsch gemacht?" wenn er doch gar nichts falsch gemacht hat.
</quote></para>

<para><quote>
Das ist das, was mich wirklich irretiert.


</quote></para>

<para>--
<ulink url="http://hr.uoregon.edu/davidrl/boot.txt">Linus Torvalds, in einem Interview mit dem BOOT Magazin, Sept 1998</ulink>
</para>

</sect1>

<sect1>
<TITLE>Verschiedenes</TITLE>

<!--FIXME: This really needs to go... -->

<para>
Dieses Kapitel unterliegt dem Copright 2003 David Lechnyr (david at lechnyr dot com).
Es ist erlaubt dieses Dokument zu kopieren, zu verbreiten und/oder unter Beachtung der
GNU Free Documentation Lizens zu ändern. Version 1.2 oder jede spätere Version wurde
mit der Free Software Foundation erstellt. Eine Kopie der englischen Lizens ist unter
http://www.gnu.org/licenses/fdl.txt verfügbar.
</para>
<para>
Dieses Kapittel wurde unter Einhaltung der GNU Public Lizens von Hendrik Bäcker (h_baecker at gmx dot net)
ins Deutsche Übersetzt. Es besteht kein Anspruch auf Richtigkeit der hier genannten Daten und Fakten.
</para>

</sect1>
</chapter>
