<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="VFS">
<chapterinfo>
	&author.jelmer;
	&author.jht;
	&author.tpot;
	<author><firstname>Simo</firstname><surname>Sorce</surname><contrib>original vfs_skel README</contrib></author>
	<author><firstname>Alexander</firstname><surname>Bokovoy</surname><contrib>original vfs_netatalk docs</contrib></author>
	<author><firstname>Stefan</firstname><surname>Metzmacher</surname><contrib>Update for multiple modules</contrib></author>
<author>&person.flex;<contrib>Deutsche Übersetzung</contrib></author>
</chapterinfo>
<title>Stapelbare VFS Module</title>

<sect1>
<title>Eigenschaften und Vorteile</title>

<para>
Seit Samba-3 gibt es Unterstützung für stapelbare VFS-(Virtual File System) Module.
Samba gibt jede Anfrage an das UNIX-Filesystem durch das geladene VFS-Modul weiter.
Dieses Kapitel deckt alle Module aus den Sambaquellen ab, plus einige Referenzen auf 
externe Module.
</para>


</sect1>

<sect1>
<title>Diskussion</title>

<para>
Sind die verteilten Bibliotheken nicht bereits im binären Paket Ihrer Plattform enthalten, könnte
es Probleme beim Kompilieren geben, da diese auf verschiedenen Plattformen verschieden kompiliert
und verlinkt werden. Momentan wurden diese auf GNU/LINUX und IRIX getestet.
</para>

<para>
Um die VFS-Module benutzen zu können, erstellen Sie eine Freigabe ähnlich der unten gezeigten.
Der essentielle Parameter ist der <smbconfoption><name>vfs objects</name></smbconfoption>-Parameter,
bei dem man einen oder mehrere VFS-Module als Namen angeben kann. Ein Beispiel, um alle Zugriffe auf
Dateien zu loggen und gelöschte Dateien in einen Recycle-Bin zu werfen, wäre <link linkend="vfsrecyc"/>.

<smbconfexample id="vfsrecyc">
	<title>smb.conf mit VFS-Modulen</title>
	<smbconfsection>[audit]</smbconfsection>
<smbconfoption><name>comment</name><value>Überwachter /Daten Ordner</value></smbconfoption>
<smbconfoption><name>path</name><value>/data</value></smbconfoption>
<smbconfoption><name>vfs objects</name><value>audit recycle</value></smbconfoption>
<smbconfoption><name>writeable</name><value>yes</value></smbconfoption>
<smbconfoption><name>browseable</name><value>yes</value></smbconfoption>
	</smbconfexample>
</para>

<para>
Die Module werden in der Reihenfole benutzt, in der sie angegeben sind. Nehmen wir an,
Sie möchten ein Virus-Scanner-Modul und ein Recycle-Bin-Modul haben. Es wäre schlauer,
das Viren Scanner Modul als erstes Modul festzulegen, sodass es eventuelle Viren sofort 
entdeckt, bevor die Datei von jemand anderem benutzt wird.
<smbconfoption><name>vfs objects</name><value>vscan-clamav recycle</value></smbconfoption>
</para>

<para>
Samba wird versuchen, Module vom <filename>/lib</filename>-Ordner des Stammverzeichnisses der Samba-Installation
zu laden (normalerweise <filename>/usr/lib/samba/vfs</filename> oder <filename>/usr/local/samba/lib/vfs
</filename>).
</para>

<para>
Manche Module können auch zweimal für die gleiche Freigabe verwendet werden. Dazu verwenden Sie
eine Konfiguration ähnlich dieser <link linkend="multimodule"/>.

<smbconfexample id="multimodule">
	<title>smb.conf mit mehreren VFS-Modulen</title>
<smbconfsection>[test]</smbconfsection>
<smbconfoption><name>comment</name><value>VFS TEST</value></smbconfoption>
<smbconfoption><name>path</name><value>/data</value></smbconfoption>
<smbconfoption><name>writeable</name><value>yes</value></smbconfoption>
<smbconfoption><name>browseable</name><value>yes</value></smbconfoption>
<smbconfoption><name>vfs objects</name><value>Beispiel:Beispiel1 Beispiel Beispiel:test</value></smbconfoption>
<smbconfoption><name>Beispiel1: parameter</name><value>1</value></smbconfoption>
<smbconfoption><name>Beispiel:  parameter</name><value>5</value></smbconfoption>
<smbconfoption><name>test:	  parameter</name><value>7</value></smbconfoption>
</smbconfexample>
</para>

</sect1>

<sect1>
<title>Enthaltene Module</title>

	<sect2>
	<title>audit</title>

		<para>
		Ein einfaches Modul, um Dateioperationen im syslog aufzuzeichnen.
		Folgende Operationen werden aufgezeichnet:
		<itemizedlist>
			<listitem>Freigabe verbinden/trennen</listitem>
			<listitem>Ordner öffnen/erstellen/löschen</listitem>
			<listitem>Datei öffnen/schliessen/umbenennen/unlink/chmod</listitem>
		</itemizedlist>
		</para>

	</sect2>

	<sect2>
	<title>extd_audit</title>

		<para>
		Dieses Modul ist identisch mit dem <command>audit</command>-Modul, ausser dass es
		sowohl ins syslog als auch in die <command>smbd</command>-Log-Dateien schreibt. Der
		<smbconfoption><name>Log Level</name></smbconfoption> für dieses Modul wird in der  
		&smb.conf;-Datei gesetzt.
		</para>

		<para>
		Gültige Einstellungen und Informationen, über was alles aufgezeichnet wird, sind unter 
		<link linkend="xtdaudit"/>
		zu finden.
		</para>

		<table frame="all" id="xtdaudit">
			<title>Ausführliche Beschreibung der Log-Informationen</title>
		<tgroup cols="2" align="center">
			<thead>
			<row><entry align="center">Log Level</entry><entry>Log Details - Ordner- und Dateioperationen</entry></row>
			</thead>
			<tbody>
			<row><entry align="center">0</entry><entry align="left">Erstellen / Löschen</entry></row>
			<row><entry align="center">1</entry><entry align="left">Erstellen / Löschen / Umbenennen / Berechtigungen ändern</entry></row>
			<row><entry align="center">2</entry><entry align="left">Erstellen / Löschen / Umbenennen / Berechtigungen ändern / Öffnen / Schliessen</entry></row>
			</tbody>
		</tgroup>
		</table>

	</sect2>

	<sect2 id="fakeperms">
	<title>fake_perms</title>

		<para>
		Dieses Modul wurde erstellt, um Roaming-Profil-Dateien und -Ordner 
		(auf dem Samba-Server unter UNIX)
		als nur lesbar zu setzen. Dieses Modul, sollte es unter der Profiles-Freigabe 
		installiert sein, gibt dem Client an, dass er Profil-Ordner und Dateien beschreiben darf.
		Das genügt dem Client, auch wenn die
		Dateien nicht überschrieben werden, falls er sich abmeldet oder herunterfährt.
		</para>

	</sect2>

	<sect2>
	<title>recycle</title>

		<para>
		Ein dem Recycle-Bin ähnliches Modul. Wird es benutzt, werden Lösch(UNLINK)-Befehle 
		abgefangen und die Datei
		wird in den recycle-Ordner verschoben, anstatt gelöscht zu werden. Das ist im Prinzip dieselbe
		Funktion, die der <guiicon>Recycle Bin</guiicon>-Ordner auf Windows-Computern ausübt.
		</para>

		<para>
		Der <guiicon>Recycle Bin</guiicon> wird weder in 
		<application>Windows Explorer</application>-Ansichten der
		Freigabe erscheinen, noch in den Netzwerkverbindungen. Es wird automatisch ein 
		<filename>.recycle</filename>-Ordner erstellt, sobald eine Datei gelöscht wird.
		Benutzer können Dateien vom <filename>.recycle</filename>-Ordner wiederherstellen. 
		Falls der <parameter>recycle:keeptree</parameter> -Parameter
		gesetzt wurde, können gelöschte Dateien unter dem gleichen Pfad gefunden werden,
		in dem sie vor dem Löschen waren.
		</para>
		
		<para>Unterstützte Optionen für das <command>recycle</command>-Modul sind folgende:
		<variablelist>
			<varlistentry>
			<term>recycle:repository</term>
				<listitem><para>
				Relativer Pfad des Ordners, in dem gelöschte Dateien abgelegt werden sollen.
				</para></listitem>
			</varlistentry>

			<varlistentry>
			<term>recycle:keeptree</term>
				<listitem><para>
				Legt fest, ob die Ordnerstruktur beibehalten werden soll, oder 
				ob die Dateien des gelöschten Ordners
				getrennt im Recycle-Bin aufbewart werden sollen.
				</para></listitem>
			</varlistentry>
			
			<varlistentry>
			<term>recycle:versions</term>
				<listitem><para>
				Ist diese Option gesetzt, werden 2 Dateien mit dem
				gleichen Namen im Recycle-Bin aufbewahrt.
				Die neuere Version der Datei wird in <quote>Copy #x of <replaceable>Dateiname</replaceable></quote>
				umbenannt</para></listitem>
			</varlistentry>

			<varlistentry>
			<term>recycle:touch</term>
				<listitem><para>
				Legt fest, ob das Datum des letzten Zugriffs verändert werden 
				soll, wenn die Datei in den Recycle-Bin kommt.
				</para></listitem>
			</varlistentry>

			<varlistentry>
			<term>recycle:maxsize</term>
				<listitem><para>
				Dateien, die grösser sind als die in diesem Parameter festgelegte Grösse 
				in Bytes, werden nicht in den Recycle-Bin verschoben.
				</para></listitem>
			</varlistentry>

			<varlistentry>
			<term>recycle:exclude</term>
				<listitem><para>
				Auflistung der Dateien, die nicht in den Recycle-Bin verschoben, 
				sondern normal gelöscht werden sollen.
				</para></listitem>
			</varlistentry>

			<varlistentry>
			<term>recycle:exclude_dir</term>
				<listitem><para>
				Enthält eine Liste von Ordnern. Falls Dateien aus diesen Ordnern gelöscht
				werden, werden sie nicht in den Recycle-Bin verschoben, sondern normal gelöscht.
				</para></listitem>
			</varlistentry>

			<varlistentry>
			<term>recycle:noversions</term>
				<listitem><para>
				Gegenteil des <parameter>recycle:versions</parameter>-Parameters. 
				Falls beide Optionen gesetzt sind, wird <parameter>recycle:noversions</parameter>
				verwendet.
				</para></listitem>
			</varlistentry>
		</variablelist>
		</para>

	</sect2>

	<sect2>
	<title>netatalk</title>

		<para>
		Das netatalk-Modul erleichtert die Koexistenz von Samba und netatalk-Dateifreigabe-Diensten.
		</para>

		<para>Vorteile gegenüber dem alten netatalk-Modul:
		<itemizedlist>
			<listitem><para>Schert sich nicht um das Erstellen 
			von .AppleDouble FORKS, hält sie nur synchron.</para></listitem>
			<listitem><para>Falls eine Freigabe in der &smb.conf; kein .AppleDouble-Objekt 
			in der hite oder veto Liste enthälti, wird es automatisch hinzugefügt.</para></listitem> 
			</itemizedlist>
		</para>

	</sect2>

</sect1>

<sect1>
<title>Anderweitig verfügbare VFS-Module</title>

<para>
Diese Unterteilung enhält eine Auflistung verschiedener anderer
VFS-Module, die es gibt, die aber aus verschiedenen Gründen nicht im CVS-
Baum von Samba enthalten sind (z.B. da es leichter für die Entwickler ist, einen
eigenen CVS-Baum zu pflegen.)
</para>

<para>
Die Auflistung der Module hier sollte keine Bewertung der Stabilität oder Funktionalität sein.
</para>

	<sect2>
	<title>DatabaseFS</title>

		<para>
		URL: <ulink noescape="1" url="http://www.css.tayloru.edu/~elorimer/databasefs/index.php">http://www.css.tayloru.edu/~elorimer/databasefs/index.php</ulink>
		</para>

		<para>Von <ulink url="mailto:elorimer@css.tayloru.edu">Eric Lorimer.</ulink></para>

		<para>
		Ich habe ein VFS-Modul entworfen, das einem read-only-Dateisystem gleichkommt.
		Es gibt die Informationen einer Datenbank in einer modularen und generischen 
		Weise als ein Dateisystem aus, um die Benutzung verschiedener Datenbanken zu ermöglichen.
		(Ursprünglich dazu entworfen um MP3's in Ordnern wie <quote>Künstler,</quote> <quote>Lied Stichwörter,</quote>
		usw. zu organisieren. Ich habe es aber auch schon für ein Studenten-Register benutzt).
		Die Ordnerstruktur wird in der Datenbank gespeichert und das Modul schert sich nicht um
		die Datenbankstruktur ausserhalb der Tabelle, die es braucht.
		</para>

		<para>
		Ich wäre dankbar für Rückmeldungen jeder Art: Kommentare, Vorschläge, Patches usw.
		Ich hoffe, dass es sich als brauchbar für jemanden erweist, der ein virtuelles Dateisystem
		erstellen möchte.
		</para>

	</sect2>

	<sect2>
	<title>vscan</title>

	<para>URL: <ulink noescape="1" url="http://www.openantivirus.org/">http://www.openantivirus.org/</ulink></para>

		<para>
		<filename>samba-vscan</filename> ist ein PROOF-OF-CONCEPT-Modul für Samba, 
		welches die VFS (Virtual File System) Funktion von Samba 2.2.x/3.0 alphaX nutzt.
		Natürlich muss Samba mit VFS-Unterstützung kompiliert werden.
		<filename>samba-vscan</filename> unterstützt viele Virenscanner und wird gepflegt von Rainer Link.
		</para>

	</sect2>
</sect1>

</chapter>
